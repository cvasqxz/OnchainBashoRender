const hre = require("hardhat");

async function main() {
  const contract = await hre.ethers.getContractFactory("OnchainBashoRender");
  const render = await contract.deploy();

  await render.deployed();

  let binAbasho = ethers.utils.arrayify("0x13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E59ABB359ABB359ABB359ABB313455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E59ABB359ABB359ABB359ABB359ABB359ABB313455E13455E13455E13455E13455E13455E13455E13455E13455E13455E59ABB3FFC79FFFC79FFFC79FFFC79F59ABB313455E13455E13455E13455E13455E13455E13455E13455E13455E13455E13455E282828FFC79F282828FFC79F59ABB359ABB313455E13455E13455E13455E13455E13455E13455E13455E13455E13455EFFC79FFFC79FFFC79FFFC79FFFC79F59ABB313455E13455E13455E59ABB359ABB359ABB313455E13455E13455E13455EFFC79FE3AF8AE3AF8AFFC79F59ABB359ABB313455E13455E59ABB3FFC79F282828FFC79F13455E13455E13455EFFC79FDC7269DC7269DC7269DC726913455E13455E13455E13455E59ABB3FFC79FFFC79FE3AF8A13455E13455E13455E13455E13455EDC7269DC7269DC726913455E13455E13455E0E40590E4059DC7269DC7269DC7269DC7269FFC79F0E40590E40590E4059F5F9FAF5F9FAFFC79F0E40590E40590E40590E40590E4059FFC79FDC7269DC72690E40590E40590E40590E40590E4059F5F9FAF5F9FAF5F9FA0E40590E40590E40590E40590E4059DC7269DC7269DC72690E40590E40590E40590E40590E40592828280C3E572828280C3E570C3E570E40590E40590E4059FFC79F0C3E57FFC79F0C3E570C3E570E40590E40590E40590E40590C3E570C3E570C3E570C3E570E40590E40590E40590E40590C3E570C3E570C3E570C3E570E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E40590E4059");

  await render.addAbasho(
    binAbasho,
    "base")

  tokenURI = await render.tokenURI(0);
  console.log(tokenURI);

}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });